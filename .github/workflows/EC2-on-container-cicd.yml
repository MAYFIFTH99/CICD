name: EC2-on-container-cicd
on:
  workflow_dispatch:
    inputs:
      tags:
        description: '태그를 설정해주세요'
        required: true
        default: main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4
        with:
          ref: '${{ github.event.inputs.tags }}'

      - name: Grant Execute Permission To Gradlew
        run: chmod +x ./gradlew

      - name: Set Up Java
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'temurin'

      - name: build with gradlew
        run: |
          ./gradlew clean test bootJar

      - name: Docker Image Build
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USER_NAME }}/cicd-study .

      - name: DockerHub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER_NAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Image Push To Hub
        run: docker push ${{ secrets.DOCKERHUB_USER_NAME }}/cicd-study

  deploy-run-docker-image-on-ec2:
    runs-on: self-hosted
    needs:
      - build

    steps:
      - name: Create SSH Key File
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Copy docker-compose.yml to EC2
        run: |
          scp -i private_key.pem docker-compose.yml ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER_NAME }}/docker-compose.yml

      - name: Docker Pull on EC2
        run: |
          ssh -i private_key.pem ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST }} "docker pull ${{ secrets.DOCKERHUB_USER_NAME }}/cicd-study:latest"

      - name: Docker-Compose App Service Down
        run: |
          ssh -i private_key.pem ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST }} "cd /home/${{ secrets.EC2_USER_NAME }} && docker-compose down"

      - name: Docker-Compose App Service Run
        run: |
          ssh -i private_key.pem ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST }} "cd /home/${{ secrets.EC2_USER_NAME }} && docker-compose up -d app"

      - name: Docker System Prune
        run: |
          ssh -i private_key.pem ${{ secrets.EC2_USER_NAME }}@${{ secrets.EC2_HOST }} "docker system prune -f"

      - name: Clean Up SSH Key File
        run: rm -f private_key.pem
